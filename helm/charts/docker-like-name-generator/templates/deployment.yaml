apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docker-like-name-generator.fullname" . }}
  labels:
    {{- include "docker-like-name-generator.labels" . | nindent 4 }}
spec:
  {{- if not (and (.Values.horizontal_pod_autoscaling) (.Values.horizontal_pod_autoscaling.enabled)) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "docker-like-name-generator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "docker-like-name-generator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-container
          # Creates and adds the run_python.sh to the shared-storage volume
          image: msoap/shell2http:latest
          {{- if and .Values.image .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          volumeMounts:
            - name: shared-storage
              mountPath: /shared
          command: ["/bin/sh", "-c"]
          args:
            - echo '#!/bin/sh' > /shared/run_python.sh;
              echo 'echo "python3 /app/src/main.py" > /shared/command_fifo' >> /shared/run_python.sh;
              echo 'timeout 5 cat /shared/response_fifo' >> /shared/run_python.sh;
              chmod 500 /shared/run_python.sh;
              chown {{ .Values.editdefaultSecurityContext.webServerUID }}:{{ .Values.editdefaultSecurityContext.groupForBoth }} /shared/run_python.sh;
              mkfifo /shared/command_fifo;
              chmod 240 /shared/command_fifo;
              chown {{ .Values.editdefaultSecurityContext.webServerUID }}:{{ .Values.editdefaultSecurityContext.groupForBoth }} /shared/command_fifo;
              mkfifo /shared/response_fifo;
              chmod 240 /shared/response_fifo;
              chown {{ .Values.editdefaultSecurityContext.appUID }}:{{ .Values.editdefaultSecurityContext.groupForBoth }} /shared/response_fifo;

      containers:
        - name: web-server
          image: msoap/shell2http:latest
          {{- if and .Values.image .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          resources:
            limits:
              cpu: "100m"
              memory: "256Mi"
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            runAsUser: {{ .Values.editdefaultSecurityContext.webServerUID }}  # Assign a specific user ID
            runAsGroup: {{ .Values.editdefaultSecurityContext.groupForBoth }}
          volumeMounts:
            - name: shared-storage
              mountPath: /shared
          command: ['/app/shell2http', '/', "/shared/run_python.sh"]
          ports:
            - containerPort: 8080 # Default port of shell2http
              name: http
              protocol: TCP
                    {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        - name: {{ .Chart.Name }}
          {{- if .Values.image }}
          image: "{{ if .Values.image.registry }}{{ .Values.image.registry }}/{{ end }}{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          {{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          {{- else }}
          image: ghcr.io/pracan/docker-like-name-generator:latest
          {{- end }}
          resources:
            limits:
              cpu: "100m"
              memory: "256Mi"
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            runAsUser: {{ .Values.editdefaultSecurityContext.appUID }}  # Assign a specific user ID
            runAsGroup: {{ .Values.editdefaultSecurityContext.groupForBoth }}
          volumeMounts:
            - name: shared-storage
              mountPath: /shared
          command: ["/bin/sh", "-c"]
          args:
            - |
              while true; do
                if read -rn 24 line < /shared/command_fifo; then
                  if [ "$line" = "python3 /app/src/main.py" ]; then  # Validate command
                    output=$(python3 /app/src/main.py 2>&1);
                    echo "$output" > /shared/response_fifo;
                  else
                    echo "ERROR: Invalid command" > /shared/response_fifo;
                  fi;
                fi;
              done
        {{- if and (.Values.debug) (.Values.debug.enabled) }}

        - name: busybox
          image: {{ .Values.debug.image }}
          resources:
            limits:
              cpu: "100m"
              memory: "256Mi"
            requests:
              cpu: "10m"
              memory: "15Mi"
          volumeMounts:
            - name: shared-storage
              mountPath: /shared
          command: ["/bin/sh", "-c"]
          args:
            - tail -f /dev/null
          {{- end }}
            
      volumes:
        - name: shared-storage
          emptyDir: 
            medium: Memory
            sizeLimit: 15Ki
